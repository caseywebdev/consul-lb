#!/bin/sh

set -e

echo 'Reloading config'

echo 'Waiting for nginx...'
while [ ! -f /run/nginx/nginx.pid ]; do sleep 1; done

echo 'Nginx is running'

if [ "$USE_SSL" == '1' ]; then
  SERVER_NAMES=$(
    fgrep server_name /etc/nginx/nginx.conf |
    sed -E 's/\s*server_name\s+(.+?);/\1/' |
    sort
  )
  if [ "$SERVER_NAMES" ]; then
    echo "Found server names: $SERVER_NAMES"
    SERVER_NAMES_MD5=$(printf "$SERVER_NAMES" | md5sum | awk '{ print $1 }')
    KV_URL=$CONSUL_URL/v1/kv$CONSUL_KV_PATH/$SERVER_NAMES_MD5
    LE_DIR=/etc/letsencrypt/live/consul-lb
    CERT_PATH=$LE_DIR/fullchain.pem
    KEY_PATH=$LE_DIR/privkey.pem

    echo 'Pulling cert from consul'
    curl -s $KV_URL/fullchain.pem?raw > $CERT_PATH

    echo 'Pulling key from consul'
    curl -s $KV_URL/privkey.pem?raw > $KEY_PATH

    if openssl x509 -checkend 604800 -noout -in $CERT_PATH; then
      echo 'Cert is good for at least 7 more days'
    else
      echo 'Cert is out of date or does not exist'

      ARGS=''

      if [ "$LETSENCRYPT_TEST_CERT" == '1' ]; then ARGS="$ARGS --test-cert"; fi

      for SERVER_NAME in $SERVER_NAMES; do ARGS="$ARGS -d $SERVER_NAME"; done

      echo 'Requesting cert from letsencrypt'
      certbot certonly -n --agree-tos --email=$LETSENCRYPT_EMAIL_ADDRESS \
        --cert-name=consul-lb --webroot -w /code/public $ARGS

      echo 'Saving current cert to consul'
      curl -sXPUT $KV_URL/fullchain.pem --data-binary @$CERT_PATH

      echo 'Saving current key to consul'
      curl -sXPUT $KV_URL/privkey.pem --data-binary @$KEY_PATH
    fi
  fi
fi

echo 'Reloading nginx'
nginx -s reload
