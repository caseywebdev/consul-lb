#!/bin/sh

set -e

if [ ! -s /run/nginx/nginx.pid ]; then exit; fi

if [ "$USE_SSL" == "1" ]; then
  SERVER_NAMES=$(
    fgrep server_name /etc/nginx/nginx.conf |
    sed -E 's/\s*server_name\s+(.+?);/\1/' |
    sort
  )

  echo "Checking cert is valid for: $SERVER_NAMES"

  if [ "$SERVER_NAMES" ]; then
    SERVER_NAMES_MD5=$(printf "$SERVER_NAMES" | md5sum | awk '{ print $1 }')
    KV_URL=$CONSUL_URL/v1/kv/$CONSUL_SERVICE_NAME
    MD5_URL=$KV_URL/$SERVER_NAMES_MD5
    SIGNAL_URL=$KV_URL/signal
    TMP_CERT=/tmp/fullchain.pem
    TMP_KEY=/tmp/privkey.pem
    LIVE_CERT=$LE_DIR/fullchain.pem
    LIVE_KEY=$LE_DIR/privkey.pem

    echo 'Pulling cert by server name MD5 from consul'
    curl -s $MD5_URL/fullchain.pem?raw > $TMP_CERT

    echo 'Pulling key by server name MD5 from consul'
    curl -s $MD5_URL/privkey.pem?raw > $TMP_CERT

    if openssl x509 -checkend 604800 -noout -in $TMP_CERT >/dev/null 2>&1; then
      echo 'Cert is good for at least 7 more days'
      cp -f $TMP_CERT $LIVE_CERT
      cp -f $TMP_KEY $LIVE_KEY
      exit
    fi

    echo 'Cert is out of date or does not exist'

    ARGS=''
    if [ "$LETSENCRYPT_TEST_CERT" == '1' ]; then ARGS="$ARGS --test-cert"; fi
    for SERVER_NAME in $SERVER_NAMES; do ARGS="$ARGS -d $SERVER_NAME"; done

    echo 'Requesting cert from letsencrypt'
    if
      certbot certonly -n --agree-tos --email=$LETSENCRYPT_EMAIL_ADDRESS \
        --cert-name=consul-lb --webroot -w /code/public $ARGS
    then

      echo 'Saving current cert to consul'
      curl -fsSXPUT $MD5_URL/fullchain.pem --data-binary @$LIVE_CERT > /dev/null

      echo 'Saving current key to consul'
      curl -fsSXPUT $MD5_URL/privkey.pem --data-binary @$LIVE_KEY > /dev/null

      echo 'Signaling new certs'
      curl -fsSXPUT $SIGNAL_URL -d 1 > /dev/null
    fi
  fi
fi

echo 'Reloading nginx'
exec nginx -s reload
