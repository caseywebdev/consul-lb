#!/bin/sh

set -e

if [ ! -s /run/nginx/nginx.pid ]; then
  exit
fi

if [ "$USE_SSL" == "1" ]; then
  DOMAINS=$(
    fgrep server_name /etc/nginx/nginx.conf |
    sed -E 's/\s*server_name\s+(.+?);/\1/' |
    sort |
    tr '\n' ' '
  )

  if [ "$DOMAINS" ]; then
    echo "Checking if cert is valid for: $DOMAINS"
    DOMAINS_MD5=$(printf "$DOMAINS" | md5sum | awk '{ print $1 }')
    SESSION_URL=$CONSUL_URL/v1/session/create
    KV_URL=$CONSUL_URL/v1/kv/$CONSUL_SERVICE_NAME/$LETSENCRYPT_TEST_CERT
    MD5_URL=$KV_URL/$DOMAINS_MD5
    VERSION_URL=$KV_URL/version
    LOCK_URL=$KV_URL/acme-challenge-lock
    TMP_CERT=/tmp/fullchain.pem
    TMP_KEY=/tmp/privkey.pem
    CERT=/code/private/fullchain.pem
    KEY=/code/private/privkey.pem
    LE_DIR=/etc/letsencrypt/live/consul-lb
    LE_CERT=$LE_DIR/fullchain.pem
    LE_KEY=$LE_DIR/privkey.pem

    echo 'Pulling cert by domain MD5 from consul'
    curl -s $MD5_URL/fullchain.pem?raw > $TMP_CERT

    echo 'Pulling key by domain MD5 from consul'
    curl -s $MD5_URL/privkey.pem?raw > $TMP_KEY

    echo 'Checking if the cert will expire within the next 30 days'
    if openssl x509 -checkend 2592000 -in $TMP_CERT; then
      cp -f $TMP_CERT $CERT
      cp -f $TMP_KEY $KEY
    else
      echo 'Cert is out of date, creating session and acquiring lock'
      $SESSION=$(curl -fsSXPUT $SESSION_URL -d '{"LockDelay":"0s","Name":"acme-challenge-lock","TTL":"60s"}' | jq .ID)
      if curl -fsSXPUT "$LOCK_URL?acquire=$SESSION"; then

        ARGS='certonly --manual -n --agree-tos --cert-name=consul-lb'
        ARGS="$ARGS --manual-auth-hook=/code/bin/certbot-auth-hook"
        ARGS="$ARGS --manual-cleanup-hook=/code/bin/certbot-cleanup-hook"

        if [ "$LETSENCRYPT_TEST_CERT" == '1' ]; then
          ARGS="$ARGS --test-cert";
        fi

        if [ "$LETSENCRYPT_EMAIL_ADDRESS" ]; then
          ARGS="$ARGS --email=$LETSENCRYPT_EMAIL_ADDRESS"
        fi

        for DOMAIN in $DOMAINS; do
          ARGS="$ARGS -d $DOMAIN";
        done

        echo 'Requesting cert from letsencrypt'
        if certbot $ARGS; then
          echo 'Pushing current cert by domain MD5 to consul'
          curl -fsSXPUT $MD5_URL/fullchain.pem --data-binary @$LE_CERT > /dev/null

          echo 'Saving current key by domain MD5 to consul'
          curl -fsSXPUT $MD5_URL/privkey.pem --data-binary @$LE_KEY > /dev/null

          echo 'Updating cert version'
          VERSION=$(md5sum $LE_CERT | awk '{ print $1 }')
          curl -fsSXPUT $VERSION_URL -d $VERSION  > /dev/null
          # The version update above will trigger another consul-template run, so
          # let the nginx reload happen then.
          exit
        fi
      else
        echo 'Lock not aquired, waiting for another session to update the cert'
      fi
    fi
  else
    echo 'No domains found, skipping cert checks'
  fi
fi

echo 'Reloading nginx'
exec nginx -s reload
