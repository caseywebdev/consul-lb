#!/bin/sh

set -e

if [ "$USE_SSL" != '1' ]; then exit; fi

echo 'Checking cert'

SERVER_NAMES=$(
  fgrep server_name /etc/nginx/nginx.conf |
  sed -E 's/\s*server_name\s+(.+?);/\1/' |
  sort
)

if [ ! "$SERVER_NAMES" ]; then exit; fi

echo "Found server names: $SERVER_NAMES"
SERVER_NAMES_MD5=$(printf "$SERVER_NAMES" | md5sum | awk '{ print $1 }')
KV_URL=$CONSUL_URL/v1/kv/$CONSUL_SERVICE_NAME
MD5_URL=$KV_URL/$SERVER_NAMES_MD5
LIVE_URL=$KV_URL/live
CERT_PATH=$LE_DIR/fullchain.pem
KEY_PATH=$LE_DIR/privkey.pem

if openssl x509 -checkend 604800 -noout -in $CERT_PATH; then
  echo 'Cert is good for at least 7 more days'
  exit
fi

echo 'Cert is out of date or does not exist'

ARGS=''
if [ "$LETSENCRYPT_TEST_CERT" == '1' ]; then ARGS="$ARGS --test-cert"; fi
for SERVER_NAME in $SERVER_NAMES; do ARGS="$ARGS -d $SERVER_NAME"; done

echo 'Requesting cert from letsencrypt'
certbot certonly -n --agree-tos --email=$LETSENCRYPT_EMAIL_ADDRESS \
  --cert-name=consul-lb --webroot -w /code/public $ARGS

echo 'Saving current cert to consul'
curl -fsSXPUT $MD5_URL/fullchain.pem --data-binary @$CERT_PATH > /dev/null
curl -fsSXPUT $LIVE_URL/fullchain.pem --data-binary @$CERT_PATH > /dev/null

echo 'Saving current key to consul'
curl -fsSXPUT $MD5_URL/privkey.pem --data-binary @$KEY_PATH > /dev/null
curl -fsSXPUT $LIVE_URL/privkey.pem --data-binary @$KEY_PATH > /dev/null
